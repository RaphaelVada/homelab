# Dockerfile
FROM mcr.microsoft.com/vscode/devcontainers/base:ubuntu

# Basis-Tools und Ansible Dependencies
RUN apt-get update && apt-get install -y \
    curl \
    wget \
    git \
    zsh \
    fzf \
    make \
    python3-pip \
    python3-venv \
    sshpass \
    openssh-client \
    default-jre \
    graphviz \
    plantuml \
    && rm -rf /var/lib/apt/lists/*

# Ansible und Proxmox Tools
RUN pip3 install --no-cache-dir \
    ansible \
    proxmoxer

# Kubernetes Tools
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
    && chmod +x kubectl \
    && mv kubectl /usr/local/bin/

# Talos CLI
RUN curl -sL https://talos.dev/install | sh

# K9s
RUN VERSION=$(curl -s "https://api.github.com/repos/derailed/k9s/releases/latest" | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/') \
    && curl -L "https://github.com/derailed/k9s/releases/download/v${VERSION}/k9s_Linux_amd64.tar.gz" | tar xz -C /usr/local/bin

# Helm
RUN curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

# Kustomize
RUN curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash \
    && mv kustomize /usr/local/bin/

# Oh-my-zsh Installation
RUN sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# Setze Zsh als Standard-Shell
SHELL ["/bin/zsh", "-c"]

# Arbeitsverzeichnis
WORKDIR /workspace

---
# docker-compose.yml
version: '3.8'
services:
  plantuml:
    image: plantuml/plantuml-server:latest
    ports:
      - "8080:8080"
    restart: unless-stopped

  excalidraw:
    image: excalidraw/excalidraw:latest
    ports:
      - "3000:80"
    restart: unless-stopped

---
# devcontainer.json
{
  "name": "Homelab Infrastructure",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {
    "docker-in-docker": {
      "version": "latest",
      "moby": true
    }
  },
  "mounts": [
    "source=${localEnv:HOME}/homelab-config,target=/workspace/live-config,type=bind",
    "source=${localEnv:HOME}/.ssh,target=/root/.ssh,type=bind"
  ],
  "customizations": {
    "vscode": {
      // Extensions werden aus dem vorherigen Artifact Ã¼bernommen
    }
  },
  "postCreateCommand": "chmod +x .devcontainer/scripts/post-create.sh && .devcontainer/scripts/post-create.sh",
  "remoteUser": "root"
}